quarkus.http.port= 8181
quarkus.container-image.name=inventory-service
quarkus.container-image.tag=latest
quarkus.testcontainers.keycloak.wait-timeout=60000 



# Configuración de la base de datos
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/inventory_db
quarkus.datasource.username=postgres
quarkus.datasource.password=admin123
quarkus.flyway.migrate-at-start=true
quarkus.flyway.create-schemas=true
#quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.persistence-xml.ignore=true


# Configuración de autenticación (JWT)
#quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/banreservas-realm
#quarkus.oidc.client-id=inventory-service
#quarkus.oidc.credentials.secret=uWFTiW72WJRKyVzMpuJpMpru46VtPeBo
#quarkus.oidc.token.audience=inventory-audience
#quarkus.oidc.application-type=service
#quarkus.oidc.roles.role-claim-path=roles
#quarkus.smallrye-jwt.jwks.json-web-key=http://localhost:8280/realms/banreservas-realm/protocol/openid-connect/certs

kafka.bootstrap.servers=localhost:9092
mp.messaging.incoming.product-events.connector=smallrye-kafka
mp.messaging.incoming.product-events.topic=product-events
mp.messaging.incoming.product-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.product-events.connector=smallrye-kafka
mp.messaging.outgoing.product-events.topic=product-events
mp.messaging.outgoing.product-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer


